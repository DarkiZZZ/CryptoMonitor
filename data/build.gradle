plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
}

android {
    namespace 'ru.msokolov.cryptomonitorapp.data'
    compileSdk 33

    defaultConfig {
        minSdk 23
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {

    implementation project(path: ':domain')

    //WorkManager and Ktx
    implementation(AndroidCore.coreKtx)
    implementation(AndroidCore.workManager)

    //Unit and android tests
    testImplementation(TestLibs.jUnit)
    androidTestImplementation(TestLibs.androidJUnit)
    androidTestImplementation(TestLibs.espresso)


    //Coroutines
    implementation(Coroutines.coroutinesCore)
    implementation(Coroutines.coroutinesAndroid)

    //ViewModel Lifecycle
    implementation(Lifecycle.viewModelKtx)

    //Inject annotation for Dagger
    implementation(Dagger.daggerInject)

    //Retrofit
    implementation(Network.retrofitCore)
    implementation(Network.retrofitGson)


    //Room DB
    implementation(Room.roomRuntime)
    implementation(Room.roomKtx)
    kapt(Room.roomCompiler)

    //Firebase
    implementation platform (Firebase.firebase)
    implementation(Firebase.firebaseAnalytics)
    implementation(Firebase.firebaseAuth)
    implementation(Firebase.firebaseDatabase)
}